import re

def validate_phone_number(phone):
    """
    严谨的中国手机号验证正则表达式
    精确匹配三大运营商实际分配的号段：
    - 移动：134-139,147,150-152,157-159,172,178,182-184,187,188,198
    - 联通：130-132,145,155,156,166,175,176,185,186
    - 电信：133,149,153,173,177,180,181,189,191,199
    - 广电：192
    """
    pattern = r'^1(3[0-9]|4[579]|5[0-35-9]|6[2567]|7[0-8]|8[0-9]|9[1-35-9])\d{8}$'
    return bool(re.fullmatch(pattern, phone))

# 全面的测试用例
test_cases = [
    # 有效号码
    ("13912345678", True),  # 移动
    ("14712345678", True),  # 移动
    ("15012345678", True),  # 移动
    ("16612345678", True),  # 联通
    ("17612345678", True),  # 联通
    ("13312345678", True),  # 电信
    ("19112345678", True),  # 电信
    ("19212345678", True),  # 广电

    # 无效号码
    ("12012345678", False),  # 无效号段
    ("14012345678", False),  # 无效号段
    ("15412345678", False),  # 无效号段
    ("19012345678", False),  # 无效号段
    ("19412345678", False),  # 无效号段
    ("12345678901", False),  # 格式错误
    ("1381234567", False),   # 长度不足
    ("138123456789", False), # 长度过长
    ("1a812345678", False),  # 包含非数字
    ("", False),             # 空字符串
]

# 运行测试
for phone, expected in test_cases:
    result = validate_phone_number(phone)
    print(f"{phone}: {'✓' if result == expected else '✗'}")
    assert result == expected, f"测试失败: {phone} 预期{expected} 实际{result}"

print("所有测试通过！")
